[{"C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\index.js":"1","C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\App.js":"2","C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\reportWebVitals.js":"3","C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\page\\View.js":"4","C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\theme.js":"5","C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\components\\CreateProjectModal.js":"6","C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\components\\PayModal.js":"7","C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\Context.js":"8"},{"size":761,"mtime":1609332849748,"results":"9","hashOfConfig":"10"},{"size":369,"mtime":1609241772318,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":5311,"mtime":1609355545410,"results":"13","hashOfConfig":"10"},{"size":306,"mtime":1609344086433,"results":"14","hashOfConfig":"10"},{"size":8115,"mtime":1609392572359,"results":"15","hashOfConfig":"10"},{"size":5522,"mtime":1609355402871,"results":"16","hashOfConfig":"10"},{"size":654,"mtime":1609342828132,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"yq9r1l",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\index.js",[],["38","39"],"C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\App.js",[],"C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\reportWebVitals.js",[],"C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\page\\View.js",["40"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Grid, Button, makeStyles, Typography } from \"@material-ui/core\";\r\nimport CreateProjectModal from \"../components/CreateProjectModal\";\r\nimport PayModal from \"../components/PayModal\";\r\nimport { UserContext } from \"../Context\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport CalendarTodayOutlinedIcon from \"@material-ui/icons/CalendarTodayOutlined\";\r\nimport FolderOutlinedIcon from \"@material-ui/icons/FolderOutlined\";\r\n\r\nconst useStyles = makeStyles({\r\n  succes: {\r\n    width: \"500px\",\r\n    \r\n  },\r\n  bg: {\r\n    width: \"500px\",\r\n    margin: \"4px 0\",\r\n   \r\n    backgroundColor: \"#fafafb\",\r\n  },\r\n  content:{\r\n    padding: \"30px 25px\",\r\n  },\r\n  icon: {\r\n    marginRight: \"10px\",\r\n    color: \"#66bb6a\",\r\n  },\r\n  blue: {\r\n    marginRight: \"20px\",\r\n    fontSize: \"23px\",\r\n    color: \"#42a5f5\",\r\n    fontStyle: \"italic\",\r\n  },\r\n  textFont: {\r\n    color: \"#343434\",\r\n    fontWeight: \"600\",\r\n  },\r\n  priceFont: {\r\n    color: \"#b8b6b6\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n  },\r\n  sub: {\r\n    color: \"#747474\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"17px\",\r\n  },\r\n  small: {\r\n    color: \"#42a5f5\",\r\n  },\r\n  h6: {\r\n    fontSize: \"16px\",\r\n    color: \"#212121\",\r\n    fontWeight: \"500\",\r\n    marginLeft: \"14px\",\r\n  },\r\n  button:{\r\n    padding: '10px 25px',\r\n    marginTop: '20px',\r\n    backgroundColor:'#0276FD',\r\n    marginTop: '-20px',\r\n    marginRight:'23px'\r\n},\r\n});\r\n\r\nconst View = () => {\r\n  const classes = useStyles();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [pay, setPay] = useState(false);\r\n  const [data, setData] = useState();\r\n  const cont = useContext(UserContext);\r\n  const [tax, setTax] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setData(cont.api);\r\n    cont.api && setTax((cont.api.cost / 100) * 20);\r\n  }, [cont.api]);\r\n  console.log(data, cont.tax);\r\n  return (\r\n    <Grid container alignItems=\"center\" justify=\"center\">\r\n      {data ? (\r\n        <Grid container className={classes.succes}>\r\n          <Grid container justify=\"flex-end\" alignItems=\"center\">\r\n            <DescriptionIcon className={classes.icon} />\r\n            <Typography className={classes.blue} variant=\"h4\">\r\n              Your project request\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container className={classes.bg}>\r\n            <Grid container  className={classes.content} justify=\"space-between\" alignItems=\"flex-start\">\r\n              <Grid item>\r\n                <Typography className={classes.textFont} variant=\"h4\">\r\n                  I'll be your businees expert\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"flex-end\">\r\n                  <Typography variant=\"h4\" color=\"primary\">\r\n                    {`$ ${data.cost}`}\r\n                  </Typography>\r\n                  <Typography className={classes.priceFont} variant=\"subtitle1\">\r\n                    {`Total:${tax}`}\r\n                  </Typography>\r\n                  <Typography className={classes.priceFont} variant=\"subtitle1\">\r\n                    (CleverX fees + 20%)\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.bg}>\r\n            <Grid container justify=\"space-between\" className={classes.content} alignItems=\"flex-start\">\r\n              <Grid item>\r\n                <Typography className={classes.sub} variant=\"h4\">\r\n                  Instead of the typical seamless color transisiton you see in\r\n                  gradient\r\n                </Typography>\r\n              </Grid>\r\n              <Grid container spacing={6}>\r\n                <Grid item>\r\n                  <Grid container alignItems=\"center\">\r\n                    <CalendarTodayOutlinedIcon\r\n                      className={classes.small}\r\n                      fontsize=\"small\"\r\n                    />\r\n                    <h6 className={classes.h6}>2 dilivery date</h6>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FolderOutlinedIcon\r\n                      className={classes.small}\r\n                      fontsize=\"small\"\r\n                    />\r\n                    <h6 className={classes.h6}>Attachment</h6>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container justify='flex-end'>\r\n            <Button className={classes.button}  type='submit' variant=\"contained\" color=\"primary\">\r\n             Cancel\r\n        </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setIsOpen(!isOpen)}\r\n          >\r\n            Open\r\n          </Button>\r\n          {isOpen && (\r\n            <CreateProjectModal\r\n              pay={pay}\r\n              setPay={setPay}\r\n              open={isOpen}\r\n              setOpen={setIsOpen}\r\n            />\r\n          )}\r\n          {pay && <PayModal pay={pay} setPay={setPay} />}\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default View;\r\n","C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\theme.js",[],"C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\components\\CreateProjectModal.js",["41","42","43","44"],"C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\components\\PayModal.js",["45","46","47","48"],"import React, { useState,useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { Grid, Typography, Divider, Button, Hidden } from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { UserContext } from \"../Context\";\r\n\r\nimport IMG from \"../img/VBM_COF.png\";\r\nimport CircleChecked from \"@material-ui/icons/CheckCircleOutline\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 490,\r\n    outline: \"none\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: \"40px 40px\",\r\n    boxShadow: theme.shadows[5],\r\n    borderRadius: \" 6px\",\r\n  },\r\n  header: {\r\n    paddingBottom: \"20px\",\r\n  },\r\n  heading: {},\r\n  icon: {\r\n    marginTop: \"5px\",\r\n    marginRight: \"0px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  arrow: {\r\n    color: \"#0276FD\",\r\n  },\r\n  box: {\r\n    marginTop: \"25px\",\r\n    padding: \"5px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    border: \"2px solid #ededed\",\r\n    borderRadius: \"4px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  check: {\r\n    color: \"#43a047\",\r\n  },\r\n  visa: {\r\n    width: \"70px\",\r\n    marginLeft: \"4px\",\r\n  },\r\n  priceFont: {\r\n    color: \"#b8b6b6\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"500\",\r\n    justifySelf: \"flex-end\",\r\n    marginBottom: \"3px\",\r\n  },\r\n  imgbox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  select: {\r\n    border: \"2px solid #0276FD\",\r\n  },\r\n  hidden: {\r\n    display: \"hidden\",\r\n    color: \"#fff\",\r\n  },\r\n  add: {\r\n    marginBottom: \"0\",\r\n    fontSize: \"20px\",\r\n    marginLeft: \"20px\",\r\n    padding: \"4px 10px\",\r\n  },\r\n  button:{\r\n    padding: '10px 25px',\r\n    marginTop: '20px',\r\n    backgroundColor:'#0276FD',\r\n    \r\n},\r\nbtgird:{\r\n    paddingTop: '80px'\r\n}\r\n}));\r\n\r\nexport default function PayModal({ pay, setPay }) {\r\n  const classes = useStyles();\r\n  const cont =  useContext(UserContext)\r\n\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [check, setCheck] = React.useState(true);\r\n\r\n  const handleClose = () => {\r\n    \r\n    setPay(false);\r\n  };\r\n  const handleSubmit =  () => {\r\n    cont.fetch()\r\n    handleClose();\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <Grid\r\n        container\r\n        className={classes.header}\r\n        alignItems=\"center\"\r\n        justify=\"space-between\"\r\n      >\r\n        <Grid item>\r\n          <ArrowBackIcon className={classes.arrow} />\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h4\" fontWeight=\"bold\">\r\n           Choose Card\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item className={classes.icon} onClick={handleClose}>\r\n          <ClearIcon />\r\n        </Grid>\r\n      </Grid>\r\n      <Divider />\r\n      <div style={{ marginTop: \"50px\" }}>\r\n        <div\r\n          className={\r\n            check ? `${classes.box} ${classes.select}` : `${classes.box}`\r\n          }\r\n          onClick={() => setCheck(true)}\r\n        >\r\n          <div item className={classes.imgbox}>\r\n            {check ? (\r\n              <CircleChecked className={classes.check} />\r\n            ) : (\r\n              <CircleChecked className={classes.hidden} />\r\n            )}\r\n            <img src={IMG} className={classes.visa} />\r\n          </div>\r\n\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.priceFont}>\r\n              Visa credit card ending with 5453\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            !check ? `${classes.box} ${classes.select}` : `${classes.box}`\r\n          }\r\n          onClick={() => setCheck(false)}\r\n        >\r\n          <div item className={classes.imgbox}>\r\n            {!check ? (\r\n              <CircleChecked className={classes.check} />\r\n            ) : (\r\n              <CircleChecked className={classes.hidden} />\r\n            )}\r\n\r\n            <img src={IMG} className={classes.visa} />\r\n          </div>\r\n\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.priceFont}>\r\n              Visa credit card ending with 6234\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.box}>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={`${classes.priceFont} ${classes.add}`}\r\n            style={{\r\n              marginBottom: \"0\",\r\n              fontSize: \"20px\",\r\n              marginLeft: \"20px\",\r\n              padding: \"4px 10px\",\r\n            }}\r\n          >\r\n            + Add Card\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <Grid className={classes.btgird} container justify='center'>\r\n      <Button className={classes.button}  type='submit' variant=\"contained\" onClick={  handleSubmit} >\r\n         Pay\r\n        </Button>\r\n        </Grid>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Grid container alignItems=\"center\" justify=\"center\">\r\n      <Modal\r\n        open={pay}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\notSakib\\Desktop\\miniproject\\client\\src\\Context.js",["49"],"import React, { useState } from \"react\";\r\n\r\n\r\nimport axios from \"axios\";\r\nexport const UserContext = React.createContext();\r\n\r\n\r\nexport const Context = ({ children }) => {\r\n  const initialState = {\r\n    name: \"\",\r\n    summary: \"\",\r\n    cost: 0,\r\n    date: \"\",\r\n  };\r\n  const [api, setApi] =useState()\r\n  const [tax, setTax] =useState(0)\r\n  const fetch = async () => {\r\n    const { data } = await axios.get(\"http://localhost:3000/project\");\r\n    setApi(data)\r\n  };\r\n\r\nconsole.log(api)\r\n  \r\n  const value = {\r\n    api,fetch,setTax,tax\r\n  };\r\n\r\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\r\n};\r\n\r\nexport default Context;\r\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":61,"column":5,"nodeType":"56","messageId":"57","endLine":61,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":126,"column":7,"nodeType":"60","messageId":"61","endLine":126,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":153,"column":14,"nodeType":"60","messageId":"61","endLine":153,"endColumn":18},{"ruleId":"58","severity":1,"message":"63","line":160,"column":9,"nodeType":"60","messageId":"61","endLine":160,"endColumn":10},{"ruleId":"58","severity":1,"message":"64","line":168,"column":9,"nodeType":"60","messageId":"61","endLine":168,"endColumn":19},{"ruleId":"58","severity":1,"message":"65","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"66","line":4,"column":45,"nodeType":"60","messageId":"61","endLine":4,"endColumn":51},{"ruleId":"67","severity":1,"message":"68","line":148,"column":13,"nodeType":"69","endLine":148,"endColumn":55},{"ruleId":"67","severity":1,"message":"68","line":170,"column":13,"nodeType":"69","endLine":170,"endColumn":55},{"ruleId":"58","severity":1,"message":"70","line":9,"column":9,"nodeType":"60","messageId":"61","endLine":9,"endColumn":21},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","unexpected","no-unused-vars","'total' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'t' is assigned a value but never used.","'handleDate' is assigned a value but never used.","'useState' is defined but never used.","'Hidden' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'initialState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]